openapi: 3.0.3
info:
  title: "Autonomous PG Management System API"
  description: "The single source of truth for all APIs across the system."
  version: "1.0.0"

paths:
  /feedback:
    post:
      summary: "Submit Tenant Feedback"
      description: "Endpoint for the public web form to submit tenant feedback."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackSubmission'
      responses:
        '204':
          description: "Feedback successfully submitted."

  /feedback/trends:
    get:
      summary: "Get Tenant Satisfaction Trend"
      description: "Provides aggregated satisfaction data for the CEO dashboard."
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "A list of monthly satisfaction scores."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SatisfactionTrendResponse'

  /tasks/strategy_proposal:
    post:
      summary: "Create Strategy Proposal Task"
      description: "Used by the Autonomous Optimizer to create a monthly proposal."
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StrategyProposalRequest'
      responses:
        '202':
          description: "Proposal successfully enqueued for CEO review."

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    FeedbackSubmission:
      type: object
      properties:
        tenant_id: { type: string, format: uuid }
        bathroom_cleanliness_score: { type: integer, minimum: 1, maximum: 5 }
        kitchen_cleanliness_score: { type: integer, minimum: 1, maximum: 5 }
        # ... and all other feedback fields

    SatisfactionTrendResponse:
      type: object
      properties:
        trend_data:
          type: array
          items:
            type: object
            properties:
              month: { type: string, format: 'YYYY-MM' }
              score: { type: number, format: float }

    StrategyProposalRequest:
      type: object
      properties:
        title: { type: string }
        summary: { type: string }
        proposed_strategy: { type: object }
