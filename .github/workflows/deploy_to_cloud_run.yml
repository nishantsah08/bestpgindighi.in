name: Deploy to Cloud Run

on:
  push:
    branches: [walking-skeleton]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}   # fir-bestpg
  GAR_LOCATION: asia-south1 # Default, will be auto-detected
  RUN_REGION: asia-south1       # Cloud Run needs a specific region
  SERVICE_NAME: api-backend
  REPO: cloud-run

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Who am I?
        run: |
          gcloud auth list --filter=status:ACTIVE
          gcloud config get-value project
          gcloud auth application-default print-access-token >/dev/null && echo "ADC OK"

      - id: repo_loc
        name: Detect GAR repo location and hostname
        env:
          PROJECT_ID: ${{ env.PROJECT_ID }}
          REPO: ${{ env.REPO }}
        run: |
          set -euo pipefail
          found=""
          for loc in asia-south1 asia; do
            if gcloud artifacts repositories describe "$REPO" \
                 --location="$loc" --project="$PROJECT_ID" >/dev/null 2>&1; then
              found="$loc"
              break
            fi
          done

          if [ -z "$found" ]; then
            echo "Repository '$REPO' not found in 'asia-south1' or 'asia' for project $PROJECT_ID." >&2
            echo "Tip: Create it with: gcloud artifacts repositories create $REPO --repository-format=docker --location=asia-south1"
            exit 1
          fi

          if [ "$found" = "asia" ]; then
            host="asia-docker.pkg.dev"
          else
            host="${found}-docker.pkg.dev"
          fi

          echo "location=$found" >> "$GITHUB_OUTPUT"
          echo "host=$host" >> "$GITHUB_OUTPUT"

      - name: Check IAM for repo (if found)
        if: steps.repo_loc.outputs.location != ''
        run: |
          gcloud artifacts repositories get-iam-policy ${{ env.REPO }} \
            --location=${{ steps.repo_loc.outputs.location }} \
            --project=${{ env.PROJECT_ID }} \
            --format='json' | jq '.bindings'

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker ${{ steps.repo_loc.outputs.host }} --quiet

      - name: Docker login (defensive)
        run: |
          gcloud auth print-access-token | \
            docker login -u oauth2accesstoken --password-stdin \
            https://${{ steps.repo_loc.outputs.host }}

      - id: vars
        name: Compute image URI
        run: |
          echo "image_uri=${{ steps.repo_loc.outputs.host }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.SERVICE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build
        run: docker build -t ${{ steps.vars.outputs.image_uri }} .

      - name: Push
        run: docker push ${{ steps.vars.outputs.image_uri }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.RUN_REGION }}
          image: ${{ steps.vars.outputs.image_uri }}
          allow_unauthenticated: true