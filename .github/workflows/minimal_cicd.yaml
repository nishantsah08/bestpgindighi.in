name: Minimal CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: bestpgindighi-in
  GAR_LOCATION: asia-south1
  REPO_NAME: bestpg-repo
  BACKEND_SERVICE_NAME: bestpg-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/181853912506/locations/global/workloadIdentityPools/github-pool-v3/providers/github-provider-v3'
          service_account: 'gemini-cicd-agent-v2@bestpgindighi-in.iam.gserviceaccount.com'

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Build and push backend image
        id: build_backend_image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.BACKEND_SERVICE_NAME }}:${{ github.sha }}
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.BACKEND_SERVICE_NAME }}:latest

      - name: Deploy backend service
        id: deploy_backend_service
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.BACKEND_SERVICE_NAME }}
          region: ${{ env.GAR_LOCATION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.BACKEND_SERVICE_NAME }}@${{ steps.build_backend_image.outputs.digest }}

  deploy-public-website:
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/181853912506/locations/global/workloadIdentityPools/github-pool-v3/providers/github-provider-v3'
          service_account: 'gemini-cicd-agent-v2@bestpgindighi-in.iam.gserviceaccount.com'

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.GCP_SA_KEY }}'
          channelId: live
          projectId: pg-business-ai-prod

  deploy-internal-dashboard:
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/181853912506/locations/global/workloadIdentityPools/github-pool-v3/providers/github-provider-v3'
          service_account: 'gemini-cicd-agent-v2@bestpgindighi-in.iam.gserviceaccount.com'

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Build and push internal dashboard image
        id: build_internal_dashboard_image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/internal_dashboard/Dockerfile
          push: true
          tags: |
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/internal-dashboard:${{ github.sha }}
            ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/internal-dashboard:latest

      - name: Deploy internal dashboard service
        id: deploy_internal_dashboard_service
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: internal-dashboard
          region: ${{ env.GAR_LOCATION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/internal-dashboard@${{ steps.build_internal_dashboard_image.outputs.digest }}
          flags: '--quiet'
